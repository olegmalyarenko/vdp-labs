import img from "./lab5.png";
import result from "./res5.png";
import result2 from "./res52.png";
import formula5 from "./formula5.png";

const ContentLabFive = () => (
    <div className="content" >
        <div id="meta5">
            <h3>Лабораторна робота №5</h3>
            <ul><h4>Мета роботи:</h4>
             <li>Вивчити особливості рекурсивних процесів</li>
            <li>Опанувати технологію рекурсивних обчислень</li>
            <li>Навчитися розробляти алгоритми та програми із застосуванням рекурсивних функцій</li>
            </ul>
        </div>

        <div className="content" id="task5">
        <h4>Варіант №17</h4>
        <h4>Умова завдання</h4>
        <p>Задати з клавіатури перший член і знаменник геометричної прогресії.<br/>
             Визначити рекурсивні функції для знаходження n-го члена геометричної прогресії та суми її членів. <br/> Визначити рекурентні співвідношення та глибину рекурсії.
        </p>
        </div>

        <div className="content" id="analize5">
            <h4>Аналіз задачі, теоретичні обгрунтування вибраного методу вирішення задачі,<br/> розрахункові формули, посилання на літературні джерела.</h4>
            <p><b>Геометричною прогресією </b>називається послідовність b з кількістю елементів n,<br/>
             у якій кожний наступний член можна знайти, якщо попередній член помножити на одне і те ж число q </p>
            <h5>Загальний член геометричної прогресії можна обчислити, використовуючи формулу:</h5>
            <img src={formula5} alt="formula"/>
            <p><a href="https://miyklas.com.ua/p/algebra/9/chislovi-poslidovnosti-14359/geometrichna-progresiia-14364/re-75ce546c-6814-4ce5-a825-58dd3e79723d">Джерело: портал "Мій клас"</a></p>

        </div>

        <div className="content" id="descr5">
            <h4>Опис алгоритму розв'язання задачі.</h4>
            <div>
            <ul>
                <li>Отримуємо перший член геометричної прогрессії b з клавіатури</li>
                <li> Отримуємо знаменник геометричної прогресії q з клавіатури</li>
                <li> Отримуємо порядний номер члена геометричної прогресії n  з клавіатури</li>
                <ul>Визиваємо рекурсивну функцію обчислення n-го члена:
                <li>При кожному визові збільшуємо лічильник глибини рекурсії. </li>
                <li>Якщо порядковий номер дорівнює 1 повертаємо значить він дорівнює першому члену геометричної прогрессії b. </li>
                <li>Якщо  порядковий номер дорівнює 2 то значить він дорівнює множині першого члена геометричної прогрессії b на  займенник q </li>
                <li>У всіх інших випадках знову визиваємо рекурсивну функцію, але  зменьшуючі на 1 порядковим номером <br/>
                та множимо результат на знаменник геометричної прогресії q на b </li> 
                </ul>
                <li>Виводимо результат та глибину рекурсiї </li>
            </ul>
            </div>
        </div>

        <div className="content" id="schema5">
            <h4>Блок-схема алгоритму програми</h4>
            <img src={img} alt="schema5"/>
        </div>
        
        <div className="content" id="code5">
        <h4>Текст програми</h4>
       
        <div className="example"> 
        {`#include <iostream>`}<br/>
        {`using namespace std;`}<br/>
        {`int k = 0;`}<br/>
        {`double Nth(int n, double b, double q) { //Рекурсивна функція обчислення n-ого члена`}<br/>
        {`++k; // Глибина рекурсії`}<br/>
        {`if (n == 1) return b; //База рекурсії`}<br/>
        {`if (n == 2) return b * q; //База рекурсії`}<br/>
        {`return Nth(n - 1, b, q) * q; //Рекурсивний виклик`}<br/>
        {`}`}<br/>

        {`int main() {`}<br/>
        {`setlocale(0, "");`}<br/>
        {`int n; `}<br/>
        {`double b, q; `}<br/>
        {`cout << "Перший член = ";`}<br/>
        {`cin >> b; //Вводимо перший член геометричної прогресії`}<br/>
        {`cout << "Знаменник = ";`}<br/>
        {`cin >> q; //Вводимо знаменник геометричної прогресії`}<br/>
        {`cout << "n = ";`}<br/>
        {`cin >> n; //Вводимо порядний номер (кількість членів прогресії)`}<br/>
        {`cout << "Результат: " << Nth(n, b, q) << "\n"; //Виводимо результат`}<br/>
        {`cout << "\nГлибина рекурсiї = " << k;`}<br/>
        {`}`}<br/>
        </div>
        </div>

        <div className="content" id="result5">
            <h4>Результати виконання програми</h4>
            <img src={result} alt="schema5"/><br/><br/>
            <img src={result2} alt="schema5"/>
        </div>

        <div className="content" id="check5">
            <h4>Аналіз достовірності результатів</h4>
            <p>Перевіряюмо отримані результати по наведеній вище формулі:</p>
            <div>Результат 1. Маємо дані b= 2, q = 2, n =4. Вираховуємо q у степені n -1  = 2 у 3й степені = 8. І множимо цей результат на b = 8 * 2 =16. Значення вірне!</div>
            <div>Результат 2. Маємо дані b= 4, q = 3, n =4. Вираховуємо q у степені n -1  = 3 у 3й степені = 27. Множимо цей результат на b = 27 * 4 =108. Значення вірне!</div>
        </div>

        <div className="content" id="summary5">
            <h4>Висновки</h4>
            <ul>Виконавши дану лабораторну роботу, ми:
                <li>Вивчили особливості рекурсивних процесів</li>
                <li>Опанували технологію рекурсивних обчислень</li>
                <li>Навчилися розробляти алгоритми та програми із застосуванням рекурсивних функцій</li>
            </ul>
        </div>

        <div className="content" id="answers5">
            <h4>Відповіді на контрольні питання</h4>
            <h5>1. Що таке рекурсивне визначення і рекурсивний об’єкт?</h5>
            <p>Міць рекурсивного визначення об'єкта в тім, що таке кінцеве визначення здатне описувати нескінченно велике число об'єктів.
            Рекурсивним називається об'єкт, який містить сам себе або визначений за допомогою самого себе.
            </p>
            <h5>2.Визначити поняття рекурсії. Що таке рекурсивна підпрограма?</h5>
            <p>Рекурсія - визначення частини функції (методу) через саму себе, тобто це функція, яка викликає саму себе, безпосередньо (в своєму тілі) або побічно (через іншу функцію).
                Рекурсивної називається підпрограма, в якій міститься звернення до самої себе. Така рекурсія називається прямий. Є також непряма рекурсія , коли дві або більше підпрограм викликають один одного.
            </p>
            <h5>3.Як визначається глибина рекурсії?</h5>
            <p>Кількість вкладених викликів функції чи процедури називається глибиною рекурсії. Одним із способів її визначення є лічильник.</p>
            <h5>4. Як обмежити послідовність вкладених викликів рекурсивної підпрограми?</h5>
            <p>Додати умову при якій послідовність викликів буде обриватися</p>
            <h5>5. Коли рекурсія неефективна і коли її необхідно уникати?</h5>
            <p>Рекурсія неефективна, коли вона викликається безліч разів, інколи ефективною замінною буде цикл.</p>
            <h5>6.Чим викликається переповнення стеку під час рекурсії?</h5>
            <p>Найзвичайніша причина помилки переповнення стека це надзвичайно глибока або нескінченна рекурсія.</p>
        </div>

 </div>
);

export default ContentLabFive;
