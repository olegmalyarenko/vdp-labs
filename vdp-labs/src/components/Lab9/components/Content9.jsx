import AceEditor from "react-ace";
import taskNine from "../contstants/taskNine";
import result from "../static/task9result.png";
import schema9 from "../static/schema9.jpg";

const Content9 = () => (
    <div className="content">
            <div id="meta9" className="content ml">
                <h3>Лабораторна робота №9</h3>
                <h4>Тема: Обробка рядків</h4>
                <ul><h4>Мета роботи:</h4>
                 <li>Ознайомитися з особливостями обробки рядків</li>
                <li>Навчитися розробляти алгоритми та програми із застосуванням рядків</li>
                </ul>
            </div>
    
            <div className="content ml" id="task9">
                <h4>Варіант №17</h4>
                <h4>Умова завдання</h4>
                <p>Розбити на склади згідно з правилами перенесення слів кожне слово на парній позиції у рядку.<br/>Слова на непарних позиціях інвертувати (записати у зворотньому порядку).</p>
            </div>

            <div className="content ml" id="analize9">
            <h4>Аналіз задачі, теоретичні обгрунтування вибраного методу вирішення задачі,<br/> розрахункові формули, посилання на літературні джерела.</h4>
            <p>Для вирішення задачі нам потрібен  для роботи зі string  - метод  lenght, що показує кількість символів</p>
            <p>Також ми можемо використати алгоритм reverse[first,last), що змінює порядок елементів</p>
            </div>

            <div className="content ml" id="descr9">
            <h4>Опис алгоритму розв'язання задачі.</h4>
            <div>
            <ul>
                <li>Створюємо зміну s для запису значення з терміналу</li>
                <li> Створюємо зміну cnt для визначення парної або не парної позиціх слова</li>
                <ul> Поки користувач не натисне кінець файлу виконуємо 
                    <li>Функція приймає значення s та cnt</li>
                    <li>Якщо  cnt позитивне записуємо слово у зворотньому напрямку</li>
                    <li>Виводимо результат</li>
                    <ul>Якщо cnt негативне 
                            <li>Якщо кількість літер меньше 3 або кількість голосних дорівнєю 1  - виводимо слово</li> 
                            <ul>Якщо ні, проходимось по довжині слова
                                <li>Друкуємо літеру якщо вона голосна </li>
                                <li>Якщо вона не остання та після неї є ще одна голосна, додаємо "-"</li>
                                <li>Якщо літера приголосла вона друкується без умов</li>
                            </ul>
                        </ul>
                </ul> 
                <li>Коли користувач тисне кінець файлу, виконання функції закінчується</li>
            </ul>    
                
            </div>   
        </div> 
    
        <div className="content ml" id="schema9">
            <h4>Блок-схема виконання алгоритму</h4 >
            <div> <img src={schema9} alt="schema" width={500}/></div>
        </div> 

        <div className="content ml" id="code9">
        <h4>Текст програми</h4>
        <AceEditor
            mode="html"
            value={taskNine}
            theme="github"
            name="task9"
            editorProps={{ $blockScrolling: true }}
            />
        </div>

        <div className="content ml" id="result9">
            <h4>Результати виконання програми</h4>
            <img src={result} alt="schema"/>
        </div>

        <div className="content ml" id="check9">
            <h4>Аналіз достовірності результатів</h4>
            <h5>Ситуація1: Маємо два слова "task nine":</h5>
            <p>Перше слово розвертається - отримуємо "ksat"</p>
            <p>Друге слово розбивається на склади - маємом "ni-ne"</p>
            <p>Результат правильний!</p>

            <h5>Ситуація2: Маємо два слова "Kyiv city":</h5>
            <p>Перше слово розвертається - отримуємо "viyK"</p>
            <p>Друге слово розбивається на склади - маємом "ci-ty"</p>
            <p>Результат правильний!</p>
        </div>    

        <div className="content ml" id="summary9">
            <h4>Висновки</h4>
            <ul>Виконавши дану лабораторну роботу, ми:
                <li>Вивчили особливості роботи з рядками</li>
                <li>Навчитися розробляти алгоритми та програми обробкою рядків, <br/> а саме зміні порядку букв у слові та розбивання слова на рядки</li>
            </ul>
        </div>

        <div className="content ml" id="answers9">
        <h4>Відповіді на контрольні питання</h4>
        <h5>Як позначається кінець рядка?</h5>
        <p>Він позначається символом кінця рядка '\0'.</p>
        <h5>Як ініціалізувати рядок під час його оголошення?</h5>
        <p>Рядок можна ініціалізувати у процесі оголошення через покажчик на рядок.Приклад: <br/>  char string[50]; <br/> 
         сhar * pointer="mastering Visual C++";</p>
        <h5>Як здійснити доступ до елемента рядка?</h5>
        <p>Кожний символ рядка має свій індекс. Доступ до символа рядка здійснюється за допомогою операції [ ].</p>
        <h5>Як увести та вивести рядок?</h5>
        <p>Уведення та виведення рядка здійснюється за допомогою функцій puts(char* s); gets(char *s); без використання циклів.</p>
        <h5>Чи можна виконати операції присвоєння рядків?</h5>
        <p>Для рядків не визначені операції присвоєння (=) та порівняння {`(>, <, ==, !=)`}.</p>
        <h5>Як реалізуються операції порівняння рядків?</h5>
        <p>Для виконання подібних дій використовуються відповідні функції, прототипи яких визначені у файлі string.h.<br/>
            Там є функція strcmp - Порівняння рядків</p>
        </div>
    </div>
);

export default Content9;    